[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

[filament_switch_sensor switch_sensor]
switch_pin: ^PG12 
pause_on_runout: False
runout_gcode:
    PAUSE_AFTER_D D=500 # length of my bowden tube
    M117 Filament Runout
    RESPOND TYPE=error MSG='Filament Runout Runout Detected'
insert_gcode:
    M117 Filament Inserted
    RESPOND TYPE=error MSG='Filament Insertion Detected'

[filament_motion_sensor encoder_sensor]
switch_pin: ^PG13
detection_length: 2.88 # accuracy of motion sensor
extruder: extruder
pause_on_runout: False
runout_gcode:
    {% if printer["filament_switch_sensor switch_sensor"].filament_detected %}
        PAUSE # [pause_resume] is required in printer.cfg
        RESPOND TYPE=error MSG='Filament Motion Switch Triggered, Pausing'
        M117 Filament Bind
    {% endif %}
    RESPOND TYPE=error MSG='Filament Motion Switch Triggered, As Expected, Not Pausing'
insert_gcode:
    M117 Filament Motion
    RESPOND TYPE=error MSG='Filament Motion Detected'

[gcode_macro PAUSE_AFTER_D]
description: Trigger to pause the print after a further 'd' mm has been extruded
variable_end_d: 0 #create variable "END_D" which is associated with the PAUSE_AFTER_D gcode macro
gcode:
    {% set d_start = printer.print_stats.filament_used|float %} #starting point is whatever the filament used is when PAUSE_AFTER_D is called
    {% set d_end = (d_start + params.D|float)|float %} #end point is start + D parameter
    SET_GCODE_VARIABLE MACRO=PAUSE_AFTER_D VARIABLE=end_d VALUE={d_end} #write the end value to the END_D gcode variable to access later
    M117 Pause at {printer["gcode_macro PAUSE_AFTER_D"].end_d|round(2)}
    UPDATE_DELAYED_GCODE ID=PAUSE_AT_D DURATION=1 #trigger the delayed gcode below after 1 second
   

[delayed_gcode PAUSE_AT_D]
initial_duration: 0 #if initial_duration is zero, the delayed gcode won't start by default
gcode:
    {% set d_current = printer.print_stats.filament_used|float %} #get the current filament used
    {% if d_current < printer["gcode_macro PAUSE_AFTER_D"].end_d %} #if we aren't at the stopping point
        M117 Stopping {d_current|round(2)} {printer["gcode_macro PAUSE_AFTER_D"].end_d|round(2)}
        UPDATE_DELAYED_GCODE ID=PAUSE_AT_D DURATION=1 #restart the timer on the delayed gcode
    {% else %}
        PAUSE
        UPDATE_DELAYED_GCODE ID=PAUSE_AT_D DURATION=0 #set the delayed gcode duration back to zero so it doesn't keep triggering
        G91                                    # Set to relative positioning
      G1 E5 F120                             # Extrude 5mm of filament at 120mm/min
      G1 E-50 F3600                            # Retract 50mm of filament at 3600mm/min
      G1 E-30 F360                            # Retract 30mm of filament at 360mm/min
      G92 E0                                 # Reset extruder position
      G90                                    # Set to absolute positioning
    {% endif %}
